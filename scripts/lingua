#!/usr/bin/env python
import rospy
import time
import os

from lingua.method import Method
from lingua.trees import Lingua, OneShotSelector

from rv_trees.trees import BehaviourTree
from rv_trees.leaves_ros import Leaf
from py_trees.composites import Selector

from lingua_kb.srv import Clear, Load

from watchdog import *

if __name__ == '__main__':
  rospy.init_node('lingua')

  rospy.ServiceProxy('/kb/clear', Clear).wait_for_service()
  
  if rospy.has_param('~objects_file'):
    rospy.loginfo('Loading objects from: {}'.format(rospy.get_param('~objects_file')))
    rospy.ServiceProxy('/kb/clear', Clear)('objects')
    rospy.ServiceProxy('/kb/load', Load)('objects', rospy.get_param('~objects_file'))

  if rospy.has_param('~types_file'):
    rospy.loginfo('Loading types from: {}'.format(rospy.get_param('~types_file')))
    rospy.ServiceProxy('/kb/clear', Clear)('types')
    rospy.ServiceProxy('/kb/load', Load)('types', rospy.get_param('~types_file'))

  path = rospy.get_param('~method_path')
  
  Method.set_path(os.path.join(path, 'primitives'))
  Method.load()

  Method.set_path(os.path.join(path, 'methods'))
  Method.load()
  
  #Watchdog(), 
  bt = BehaviourTree('Lingua', Selector(children=[Lingua()]))
  bt.run(push_to_start=False, hz=1, setup_timeout=2)