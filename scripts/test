#!/usr/bin/env python
from lingua import *
from lingua.method import Method

import yaml
import json

data = '''
- !!python/object:lingua.types.Conjunction
  left: !!python/object:lingua.types.Task
    method_argument_types:
      arg0: tool
    method_arguments:
      arg0: &id001 !!python/object:lingua.types.Object
        attributes: []
        id:
        - g1
        limit: !!python/object:lingua.types.Only
          count: 1
        name: gripper
        relation: null
        type_name: tool
    method_name: open
    task_name: open(tool arg0)
  right: !!python/object:lingua.types.Task
    method_argument_types:
      arg0: tool
    method_arguments:
      arg0: *id001
    method_name: close
    task_name: close(tool arg0)
  tag: and
'''

frame = yaml.load(data, Loader=yaml.FullLoader)
args = frame[0].left.method_arguments

if len(frame) > 1:
    root = {
        'type': 'sequence',
        'children': [ node.to_json(args) for node in frame ]
    }
else:
    root = frame[0].to_json(args)

method=Method(
    name='gnash(tool arg0)',
    preconditions=[],
    postconditions=[],
    root=root
)

Method.add(method)

#print(obj[0].left.method_arguments)


# print(json.dumps(method, indent=2, sort_keys=True))


